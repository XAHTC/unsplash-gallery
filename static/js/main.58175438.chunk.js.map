{"version":3,"sources":["redux/reducers/items.js","redux/reducers/index.js","redux/store.js","components/Modal/index.jsx","App.js","redux/actions/items.js","index.js"],"names":["initialState","items","state","action","type","payload","rootReducer","combineReducers","itemsReducer","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Modal","onClose","active","url","className","onClick","src","App","dispatch","useDispatch","useEffect","a","fetch","response","json","useSelector","useState","selectedItem","setSelectedItem","map","item","index","id","urls","regular","alt","user","profile_image","small","username","alt_description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAAMA,EAAe,CACnBC,MAAO,IAeMA,EAZD,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC9C,MAAoB,gBAAhBA,EAAOC,KACF,2BACFF,GADL,IAEED,MAAOE,EAAOE,UAIXH,GCHMI,EALKC,YAAgB,CAClCN,MAAOO,I,QCOMC,EARDC,YACZJ,EACAK,YACEC,YAAgBC,KAChBC,OAAOC,8BAAgCD,OAAOC,iC,QCQnCC,G,MAbD,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IAChC,OACE,qBACEC,UAAWF,EAAS,eAAiB,QACrCG,QAASJ,EAFX,SAIE,qBAAKG,UAAU,aAAaC,QAASJ,EAArC,SACE,qBAAKK,IAAKH,EAAKE,QAASJ,U,8BC0CjBM,MA5Cf,WACE,IAAMC,EAAWC,cAEjBC,qBAAU,WACRF,ECXF,uCAAO,WAAMA,GAAN,iBAAAG,EAAA,sEACkBC,MAAM,+GADxB,cACCC,EADD,gBAEcA,EAASC,OAFvB,OAECA,EAFD,OAGLN,EAAS,CACPpB,KAAM,cACNC,QAASyB,IALN,2CAAP,yDDYG,IAEH,IAAM7B,EAAQ8B,aAAY,qBAAE9B,MAAiBA,SAPhC,EAS2B+B,mBAAS,MATpC,mBASNC,EATM,KASQC,EATR,KAWb,OACE,sBAAKd,UAAU,MAAf,UACGnB,EAAMkC,KAAI,SAACC,EAAMC,GAAP,OACT,sBACEjB,UAAU,kBAEVkB,GAAID,EACJhB,QAAS,kBAAMa,EAAgBE,IAJjC,UAME,qBAAKhB,UAAU,QAAQE,IAAKc,EAAKG,KAAKC,QAASC,IAAI,SACnD,sBAAKrB,UAAU,OAAf,UACE,qBACEA,UAAU,SACVE,IAAKc,EAAKM,KAAKC,cAAcC,MAC7BH,IAAI,WAEN,sBAAKrB,UAAU,OAAf,UACE,mBAAGA,UAAU,OAAb,SAAqBgB,EAAKM,KAAKG,WAC/B,mBAAGzB,UAAU,OAAb,SAAqBgB,EAAKU,0BAbzBV,EAAKE,OAkBbL,GACC,cAAC,EAAD,CACEf,QAAQ,EACRD,QAAS,kBAAMiB,EAAgB,OAC/Bf,IAAKc,EAAaM,KAAKC,cEtCjCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUxC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJyC,SAASC,eAAe,W","file":"static/js/main.58175438.chunk.js","sourcesContent":["const initialState = {\r\n  items: [],\r\n}\r\n\r\nconst items = (state = initialState, action) => {\r\n  if (action.type === \"FETCH_ITEMS\") {\r\n    return {\r\n      ...state,\r\n      items: action.payload,\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\n\r\nexport default items;","import {combineReducers} from \"redux\";\r\n\r\nimport itemsReducer from \"./items\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: itemsReducer,\r\n})\r\n\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Modal = ({ onClose, active, url }) => {\r\n  return (\r\n    <div\r\n      className={active ? \"modal active\" : \"modal\"}\r\n      onClick={onClose}\r\n    >\r\n      <div className=\"modal__img\" onClick={onClose}>\r\n        <img src={url} onClick={onClose}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"./components/Modal\";\n\nimport { fetchItems } from \"./redux/actions/items\";\n\nimport \"./style.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchItems());\n  }, []);\n  \n  const items = useSelector(({items}) => items.items)\n\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  return (\n    <div className=\"app\">\n      {items.map((item, index) => (\n        <div\n          className=\"image-container\"\n          key={item.id}\n          id={index}\n          onClick={() => setSelectedItem(item)}\n        >\n          <img className=\"image\" src={item.urls.regular} alt=\"logo\" />\n          <div className=\"info\">\n            <img\n              className=\"avatar\"\n              src={item.user.profile_image.small}\n              alt=\"avatar\"\n            />\n            <div className=\"text\">\n              <p className=\"name\">{item.user.username}</p>\n              <p className=\"name\">{item.alt_description}</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {selectedItem && (\n        <Modal\n          active={true}\n          onClose={() => setSelectedItem(null)}\n          url={selectedItem.urls.regular}\n        />\n      )}\n    </div>\n  );\n}\nexport default App;\n","export function fetchItems() {\r\n  return async dispatch => {\r\n    const response = await fetch(\"https://api.unsplash.com/photos/?client_id=ab3411e4ac868c2646c0ed488dfd919ef612b04c264f3374c97fff98ed253dc9\");\r\n    const json = await response.json()\r\n    dispatch({\r\n      type: \"FETCH_ITEMS\",\r\n      payload: json,\r\n    })\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}